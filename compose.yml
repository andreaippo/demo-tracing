services:
  demo-tracing-service:
    build:
      context: .
    container_name: demo-tracing-service
    environment:
      - SPRING_PROFILES_ACTIVE=container
      - OTEL_SERVICE_NAME=demo-tracing
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318 #OTEL_EXPORTER_OTLP_ENDPOINT and OTEL_EXPORTER_OTLP_PROTOCOL must have coherent values: targeting port 4318 requires PROTOCOL to be http/protobuf (or http/json). Targeting port 4317 requires PROTOCOL to be grpc
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_LOGS_EXPORTER=otlp,console
      - OTEL_METRICS_EXPORTER=otlp,console
      - OTEL_TRACES_EXPORTER=otlp,console
    ports:
      - 8080:8080
    deploy:
      mode: global
      resources:
        limits:
          memory: 512M
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_DATABASE=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_ROOT_USERNAME=andrea
    deploy:
      mode: global
    ports:
      - 27017:27017
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    ports:
#      - '9090:9090'
#    command:
#      - '--enable-feature=otlp-write-receiver'
#    volumes:
#      - ./src/main/resources/prometheus.yml:/prometheus/prometheus.yml
#  grafana:
#    image: grafana/grafana
#    ports:
#      - '3000:3000'
  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - 5778:5778
      - 16686:16686
      - 4317
      - 4318
    deploy:
      mode: global
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector
    command: ["--config=/resources/collector-config.yml"]
    volumes:
#    add :Z if using SELinux to avoid permission errors: https://docs.docker.com/storage/bind-mounts/#configure-the-selinux-label
      - ./src/main/resources/collector-config.yml:/resources/collector-config.yml:Z
    ports:
      - 4317:4317
      - 4318:4318
    deploy:
      mode: global
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      CLUSTER_ID: QjvaUgwGQ0qSM66eyjDSZQ
      KAFKA_NODE_ID: 0
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://kafka:9094,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 0@kafka:29093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9094,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    deploy:
      mode: global
networks:
  demo-tracing-network:
    external: true